// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// run_mcmc
Rcpp::List run_mcmc(unsigned int nIter, unsigned int burnin, unsigned int thin, unsigned int n, int nsamp, int ninit, int metropolis, bool simple, double convex, int npoint, bool dirichlet, bool proportion_model, bool BVS, const std::string& gamma_prior, const std::string& gamma_sampler, const std::string& eta_prior, const std::string& eta_sampler, Rcpp::List initList, Rcpp::List rangeList, Rcpp::List hyperparList, arma::uvec datEvent, arma::vec datTime, arma::cube datX, arma::mat datX0, arma::mat datProportionConst);
RcppExport SEXP _GPTCM_run_mcmc(SEXP nIterSEXP, SEXP burninSEXP, SEXP thinSEXP, SEXP nSEXP, SEXP nsampSEXP, SEXP ninitSEXP, SEXP metropolisSEXP, SEXP simpleSEXP, SEXP convexSEXP, SEXP npointSEXP, SEXP dirichletSEXP, SEXP proportion_modelSEXP, SEXP BVSSEXP, SEXP gamma_priorSEXP, SEXP gamma_samplerSEXP, SEXP eta_priorSEXP, SEXP eta_samplerSEXP, SEXP initListSEXP, SEXP rangeListSEXP, SEXP hyperparListSEXP, SEXP datEventSEXP, SEXP datTimeSEXP, SEXP datXSEXP, SEXP datX0SEXP, SEXP datProportionConstSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< unsigned int >::type nIter(nIterSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type thin(thinSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type nsamp(nsampSEXP);
    Rcpp::traits::input_parameter< int >::type ninit(ninitSEXP);
    Rcpp::traits::input_parameter< int >::type metropolis(metropolisSEXP);
    Rcpp::traits::input_parameter< bool >::type simple(simpleSEXP);
    Rcpp::traits::input_parameter< double >::type convex(convexSEXP);
    Rcpp::traits::input_parameter< int >::type npoint(npointSEXP);
    Rcpp::traits::input_parameter< bool >::type dirichlet(dirichletSEXP);
    Rcpp::traits::input_parameter< bool >::type proportion_model(proportion_modelSEXP);
    Rcpp::traits::input_parameter< bool >::type BVS(BVSSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type gamma_prior(gamma_priorSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type gamma_sampler(gamma_samplerSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type eta_prior(eta_priorSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type eta_sampler(eta_samplerSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type initList(initListSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type rangeList(rangeListSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type hyperparList(hyperparListSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type datEvent(datEventSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type datTime(datTimeSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type datX(datXSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type datX0(datX0SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type datProportionConst(datProportionConstSEXP);
    rcpp_result_gen = Rcpp::wrap(run_mcmc(nIter, burnin, thin, n, nsamp, ninit, metropolis, simple, convex, npoint, dirichlet, proportion_model, BVS, gamma_prior, gamma_sampler, eta_prior, eta_sampler, initList, rangeList, hyperparList, datEvent, datTime, datX, datX0, datProportionConst));
    return rcpp_result_gen;
END_RCPP
}
